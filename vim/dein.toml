[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]] # カーソル位置のコンテキストのftを判定するライブラリ
repo = 'Shougo/context_filetype.vim'

[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'roxma/nvim-yarp'
on_if = '!has("nvim")'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
on_if = '!has("nvim")'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['nvim-yarp', 'roxma/vim-hug-neovim-rpc']
hook_add = '''
" must install:
" Shougo/Denite.vim
  cnoremap :db Denite buffer
  cnoremap ;db Denite buffer
  
  cnoremap :df Denite file
  cnoremap ;df Denite file
  
  cnoremap :dh Denite help
  cnoremap ;dh Denite help


  "Define mappings
  autocmd FileType denite call s:denite_my_settings()
  function! s:denite_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ denite#do_map('do_action')
    nnoremap <silent><buffer><expr> d
    \ denite#do_map('do_action', 'delete')
    nnoremap <silent><buffer><expr> p
    \ denite#do_map('do_action', 'preview')
    nnoremap <silent><buffer><expr> q
    \ denite#do_map('quit')
    nnoremap <silent><buffer><expr> i
    \ denite#do_map('open_filter_buffer')
    nnoremap <silent><buffer><expr> <Space>
    \ denite#do_map('toggle_select').'j'
  endfunction
'''

[[plugins]] # カラースキーマ
repo = 'cocopon/iceberg.vim'
hook_add = '''
  set background=dark
  colorscheme iceberg
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']
hook_add = '''   
  set laststatus=2
  let g:airline_theme = 'deus'
  let g:airline_powerline_fonts = 1
  let g:airline#extensions#tabline#enabled = 1
  let g:airline#extensions#tabline#buffer_idx_mode = 1
  let g:airline#extensions#virtualenv#enabled = 1
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Shougo/vimproc.vim'
#build = 'make'
hook_post_update = '''
  if dein#util#_is_windows()
      let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
      let cmd = 'make -f make_cygwin.mak'
      elseif executable('gmake')
      let cmd = 'gmake'
      else
      let cmd = 'make'
      endif
      let g:dein#plugin.build = cmd
'''

# [[plugins]]
# repo = 'Shougo/deoplete.nvim'
# on_i = 1
# hook_source = '''
#   let g:deoplete#enable_at_startup = 1
#   call deoplete#custom#option('enable_smart_case', 1)
#   inoremap <expr><TAB> pumvisible() ? "\<C-N>" : "\<TAB>"
# '''
# 
# [[plugins]]
# repo = 'Shougo/deoplete-nextword'

[[plugins]]
repo = 't9md/vim-choosewin'
hook_add = '''
  " invoke with '-'
  nmap  -  <Plug>(choosewin)
'''

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  call defx#custom#option('_', {
    \ 'columns': 'indent:git:icons:filename',
    \ 'show_ignored_files': 1,
    \ })
  
  let g:defx_icons_enable_syntax_highlight = 1
  let g:defx_icons_column_length = 2

  cnoremap :dx Defx ~
  cnoremap ;dx Defx ~

  cnoremap :dxs Defx -split=vertical -winwidth=40 -direction=topleft -buffer-name='side-bar'
  cnoremap ;dxs Defx -split=vertical -winwidth=40 -direction=topleft -buffer-name='side-bar'

  cnoremap :dxh Defx -split=vertical -winwidth=40 -direction=topleft -buffer-name='side-bar' ~ 
  cnoremap ;dxh Defx -split=vertical -winwidth=40 -direction=topleft -buffer-name='side-bar' ~ 

"  cnoremap :xd :<C-u>Defx `expand('%:p:h')` -search=`expand('%:p')`<CR>
"  cnoremap :xc :<C-u>Defx<CR>

  
  autocmd FileType defx call s:defx_my_settings()
      function! s:defx_my_settings() abort
        nnoremap <silent><buffer><expr><nowait> w
        \ defx#do_action('open', 'choose')

        nnoremap <silent><buffer><expr> <CR>
        \ defx#do_action('open', 'choose')

        " 【o】 ファイルを開く
        nnoremap <silent><buffer><expr> o
        \ defx#do_action('drop')

        " 【s】 ウィンドウを水平分割してファイルを開く
        nnoremap <silent><buffer><expr> s
        \ defx#do_action('open', 'split')

        " 【v】 ウィンドウを垂直分割してファイルを開く
        nnoremap <silent><buffer><expr> v
        \ defx#do_action('open', 'vsplit')

        " 【c】 ファイルをコピーする
        nnoremap <silent><buffer><expr> c
        \ defx#do_action('copy')

        " 【m】 ファイルを移動する
        nnoremap <silent><buffer><expr> m
        \ defx#do_action('move')

        " 【p】 ファイルを貼り付ける
        nnoremap <silent><buffer><expr> p
        \ defx#do_action('paste')

        " 【b】 新しいファイルを作成する
        nnoremap <silent><buffer><expr> b
        \ defx#do_action('new_file')

        " 【B】 新しいディレクトリを作成する
        nnoremap <silent><buffer><expr> B
        \ defx#do_action('new_directory')

        " 【d】 ファイルを削除する
        nnoremap <silent><buffer><expr> d
        \ defx#do_action('remove')

        " 【r】 ファイル名を変更する
        nnoremap <silent><buffer><expr> r
        \ defx#do_action('rename')

        " 【t】 ツリーを表示/非表示する
        nnoremap <silent><buffer><expr> t
        \ defx#do_action('open_or_close_tree')

        " 【l】 ツリーを表示する
        nnoremap <silent><buffer><expr> l
        \ defx#do_action('open_tree')

        " 【h】 ツリーを非表示する
        nnoremap <silent><buffer><expr> h
        \ defx#do_action('close_tree')

        " 【x】 ファイルを実行する
        nnoremap <silent><buffer><expr> x
        \ defx#do_action('execute_system')

        " 【yy】 ファイル/ディレクトリのパスをコピーする
        nnoremap <silent><buffer><expr> yy
        \ defx#do_action('yank_path')

"        " 【.】 隠しファイルを表示/非表示する
"        nnoremap <silent><buffer><expr> .
"        \ defx#do_action('toggle_ignored_files')

        " 【<BS>】 親ディレクトリに移動する
        nnoremap <silent><buffer><expr> <BS>
        \ defx#do_action('cd', ['..'])

"        " 【~】 ホームディレクトリに移動する
"        nnoremap <silent><buffer><expr> ~
"        \ defx#do_action('cd', ['~'])

        " 【j】 カーソルを下に移動する
        nnoremap <silent><buffer><expr> j
        \ line('.') == line('$') ? 'gg' : 'j'

        " 【k】 カーソルを上に移動する
        nnoremap <silent><buffer><expr> k
        \ line('.') == 1 ? 'G' : 'k'

        " 【cd】 Neovim上のカレントディレクトリを変更する
        nnoremap <silent><buffer><expr> cd
        \ defx#do_action('change_vim_cwd')

        " nop
        nnoremap <silent><buffer><expr> q
        \ defx#do_action('')
  endfunction
'''

[[plugins]]
repo = "Shougo/deol.nvim"
hook_add = '''
  " 【Ctrl + o】 float windowでターミナルを表示
  nnoremap <silent><C-o> :<C-u>Deol -split=floating<CR>
  " 【ESC】 ターミナルモードから抜ける
  tnoremap <ESC>   <C-\><C-n>
'''

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'szw/vim-tags'

#[[plugins]]
#repo = 'nvim-treesitter/nvim-treesitter'
#on_if = 'has("nvim")'
#merged = '0'

